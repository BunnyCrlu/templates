kind: Environment
name: demo-books-symfony
type: primary
components:
    -
        kind: Database
        name: database
        dockerCompose:
            command: '--default-authentication-plugin=mysql_native_password'
            environment:
                MYSQL_DATABASE: symfony
                MYSQL_PASSWORD: symfony_pass
                MYSQL_ROOT_PASSWORD: ssap_toor
                MYSQL_USER: symfony_user
            image: 'mysql:8.0.29'
            ports:
                - '3306:3306'
        volumes:
            -
                name: database-data
                mount: /var/lib/mysql
                subPath: ''
    -
        kind: SidecarContainer
        name: nginx
        gitRepo: 'https://github.com/bunnyshell/templates.git'
        gitBranch: main
        gitApplicationPath: components/symfony-rest-api/.docker/nginx
        dockerCompose:
            build:
                context: ./components/symfony-rest-api/.docker/nginx
            environment:
                PHP_HOST: localhost
            ports:
                - '8080:8080'
    -
        kind: Application
        name: symfony
        gitRepo: 'https://github.com/bunnyshell/templates.git'
        gitBranch: main
        gitApplicationPath: components/symfony-rest-api
        dockerCompose:
            build:
                context: ./components/symfony-rest-api
                dockerfile: .docker/php/Dockerfile
                target: dev
            environment:
                DATABASE_URL: 'mysql://symfony_user:symfony_pass@database:3306/symfony?serverVersion=8&charset=utf8mb4'
                FRONTEND_URL: 'https://{{ components.frontend.ingress.hosts[0] }}'
                PHP_MEMORY_LIMIT: 3G
                PHP_OPCACHE_ENABLE: '0'
                PHP_OPCACHE_VALIDATE_TIMESTAMPS: '0'
                RUN_PRE_RELEASE: 'true'
                RUN_WARMUP: 'true'
                XDEBUG_MODE: 'off'
                XDEBUG_START_WITH_REQUEST: trigger
            ports:
                - '9000:9000'
                - '8080:8080'
        pod:
            init_containers: {  }
            sidecar_containers:
                -
                    from: nginx
                    name: nginx
                    environment: {  }
                    shared_paths:
                        -
                            path: /var/www
                            target:
                                path: /var/www
                                container: '@parent'
                            initial_contents: '@target'
                    volumes: {  }
                    shared_volumes: {  }
                    metadata:
                        com.bunnyshell.k8s.id: 1
        hosts:
            -
                hostname: 'symfony-{{ env.base_domain }}'
                path: /
                servicePort: 8080
        volumes:
            -
                name: symfony-cache
                mount: /var/www/var
                subPath: ''
    -
        kind: Application
        name: frontend
        gitRepo: 'https://github.com/bunnyshell/templates.git'
        gitBranch: master
        gitApplicationPath: components/react-books-app
        dockerCompose:
            build:
                context: ./
                args:
                    REACT_APP_BASE_API: 'https://{{ components.symfony.ingress.hosts[0] }}'
                target: prod
            ports:
                - '8080:8080'
        hosts:
            -
                hostname: 'frontend-{{ env.base_domain }}'
                path: /
                servicePort: 8080
volumes:
    -
        name: symfony-cache
        size: 1Gi
        type: disk
    -
        name: database-data
        size: 1Gi
        type: disk

