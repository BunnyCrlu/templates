kind: Environment
name: 'Magento 2.4 CE - Dev'
type: primary
environmentVariables:
  MAGE_ADMIN_EMAIL: hello@bunnyshell.com
  MAGE_ADMIN_FIRSTNAME: Magento
  MAGE_ADMIN_LASTNAME: Bunnyshell
  MAGE_ADMIN_PASSWORD: bunnysh3ll
  MAGE_ADMIN_USER: bunnyshell
  MAGE_BACKEND_FRONTNAME: bns
  MAGE_BASE_URL: 'http://{{ components.magento.ingress.hosts[0].url }}'
  MAGE_BASE_URL_SECURE: 'https://{{ components.magento.ingress.hosts[0].url }}'
  MAGE_CURRENCY: USD
  MAGE_DB_HOST: db
  MAGE_DB_NAME: '{{ components.db.vars.MYSQL_DATABASE }}'
  MAGE_DB_PASSWORD: '{{ components.db.vars.MYSQL_PASSWORD }}'
  MAGE_DB_PREFIX: ''
  MAGE_DB_USER: '{{ components.db.vars.MYSQL_USER }}'
  MAGE_ELASTICSEARCH_ENABLE_AUTH: '0'
  MAGE_ELASTICSEARCH_HOST: elasticsearch
  MAGE_ELASTICSEARCH_PORT: '9200'
  MAGE_INIT_PARAMS: MAGE_MODE=developer
  MAGE_KEY: abcdefghijklmnopqrstuvwxyzABCDEF
  MAGE_LANGUAGE: en_US
  MAGE_PRIVKEY: replace-with-your-credentials
  MAGE_PUBKEY: replace-with-your-credentials
  MAGE_SEARCH_ENGINE: elasticsearch7
  MAGE_TIMEZONE: Europe/Bucharest
  MAGE_USE_REWRITES: '1'
  MAGE_USE_SECURE: '1'
  MAGE_USE_SECURE_ADMIN: '1'
components:
  -
    kind: SidecarContainer
    name: web
    dockerCompose:
      environment:
        FPM_HOST: magento
        FPM_PORT: '9000'
        HTTPS_METHOD: noredirect
        MAGENTO_RUN_MODE: developer
        PHP_EXTENSIONS: 'bcmath bz2 calendar exif gd gettext intl mysqli pcntl pdo_mysql soap sockets sysvmsg sysvsem sysvshm opcache zip sodium redis xsl blackfire'
        UPSTREAM_HOST: 127.0.0.1
        VIRTUAL_HOST: 'magento-{{ env.base_domain }}'
        VIRTUAL_PORT: '80'
        WITH_XDEBUG: '0'
      image: 'magento/magento-cloud-docker-nginx:1.19-1.3.2'
      entrypoint: /bin/bash
      command:
        - '-c'
        - |
          sed -i "s/proxy_set_header X-Forwarded-Proto \$$scheme;/proxy_set_header X-Forwarded-Proto https;/" /etc/nginx/conf.d/default.conf
          /docker-entrypoint.sh nginx -g "daemon off;"
      ports:
        - '80:80'
    volumes:
      -
        name: public-media
        mount: /app/pub/media
        subPath: ''
      -
        name: public-static
        mount: /app/pub/static
        subPath: ''
  -
    kind: Application
    name: magento
    gitRepo: 'https://github.com/bunnyshell/templates.git'
    gitBranch: magento-dev-2.4-ce/v0.1.0
    gitApplicationPath: /components/magento-2.4-ce
    dockerCompose:
      build:
        context: ./components/magento-2.4-ce
        dockerfile: ./.docker/php/Dockerfile-dev
      environment:
        MAGENTO_RUN_MODE: developer
        PHP_EXTENSIONS: 'bcmath bz2 calendar exif gd gettext intl mysqli pcntl pdo_mysql soap sockets sysvmsg sysvsem sysvshm opcache zip sodium redis xsl blackfire'
      labels:
        kompose.service.healthcheck.readiness.test: 'CMD /readiness-probe.sh'
        kompose.service.healthcheck.readiness.interval: 10s
      ports:
        - '9000:9000'
        - '80:80'
    pod:
      sidecar_containers:
        -
          from: web
          name: magento-web
          shared_paths:
            -
              path: /app
              target:
                path: /app
                container: '@parent'
              initial_contents: '@target'
    hosts:
      -
        hostname: 'shop-{{ env.base_domain }}'
        path: /
        servicePort: 80
    volumes:
      -
        name: public-media
        mount: /app/pub/media
        subPath: ''
      -
        name: public-static
        mount: /app/pub/static
        subPath: ''
  -
    kind: Database
    name: db
    dockerCompose:
      environment:
        MYSQL_DATABASE: magento2
        MYSQL_PASSWORD: magento2
        MYSQL_ROOT_PASSWORD: magento2
        MYSQL_USER: magento2
      image: 'mysql:8'
      ports:
        - '3306:3306'
    volumes:
      -
        name: mysql-data
        mount: /var/lib/mysql
        subPath: ''
  -
    kind: Service
    name: elasticsearch
    dockerCompose:
      environment:
        cluster.name: es-docker
        node.name: node1
      image: 'magento/magento-cloud-docker-elasticsearch:7.11-1.3.2'
      ports:
        - '9200:9200'
    volumes:
      -
        name: elasticsearch-data
        mount: /usr/share/elasticsearch/data
        subPath: ''
  -
    kind: Service
    name: redis
    dockerCompose:
      image: 'redis:6.2'
      ports:
        - '6379:6379'
    volumes:
      -
        name: redis-data
        mount: /data
        subPath: ''
  -
    kind: Service
    name: varnish
    dockerCompose:
      image: 'magento/magento-cloud-docker-varnish:latest-1.2'
      entrypoint: /bin/sh
      command: '-c "tail -f /dev/null"'
    volumes:
      -
        name: varnish-data
        mount: /var/lib/varnish
        subPath: ''
  -
    kind: Service
    name: mailhog
    dockerCompose:
      image: 'mailhog/mailhog:latest'
      ports:
        - '1025:1025'
        - '8025:8025'
    hosts:
      -
        hostname: 'mailhog-{{ env.base_domain }}'
        path: /
        servicePort: 8025
    volumes:
      -
        name: mailhog-data
        mount: /data/mailhog
        subPath: ''
volumes:
  -
    name: elasticsearch-data
    size: 200Mi
    type: disk
  -
    name: mysql-data
    size: 1Gi
    type: disk
  -
    name: redis-data
    size: 100Mi
    type: disk
  -
    name: varnish-data
    size: 100Mi
    type: disk
  -
    name: mailhog-data
    size: 100Mi
    type: disk
  -
    name: public-media
    size: 1Gi
    type: network
  -
    name: public-static
    size: 100Mi
    type: network
