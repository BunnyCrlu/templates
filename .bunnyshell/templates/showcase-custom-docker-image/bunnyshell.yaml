kind: Environment
name: Showcase - CustomDockerImage
type: primary
components:
    -
        kind: CustomDockerImage
        name: api-image
        gitRepo: 'https://github.com/bunnyshell/templates.git'
        gitBranch: main
        gitApplicationPath: components/springboot-rest-api-gradle
        runnerImage: 'openjdk:17-jdk-alpine'
        build:
            - 'cd ./components/springboot-rest-api-gradle'
            - './gradlew :jib --image="$BNS_IMAGE_FULL_NAME" -Djib.to.auth.username="$BNS_IMAGE_REGISTRY_USERNAME" -Djib.to.auth.password="$BNS_IMAGE_REGISTRY_PASSWORD"'
    -
        kind: Application
        name: api
        gitRepo: 'https://github.com/bunnyshell/templates.git'
        gitBranch: main
        gitApplicationPath: components/springboot-rest-api-gradle
        dockerCompose:
            image: '{{ components.api-image.image }}'
            environment:
                DATABASE_DBNAME: bunny_books
                DATABASE_HOST: db
                DATABASE_PASSWORD: need-to-replace
                DATABASE_PORT: '3306'
                DATABASE_USER: books
                FRONTEND_URL: 'https://{{ components.frontend.ingress.hosts[0].hostname }}'
            ports:
                - '9000:9000'
        hosts:
            -
                hostname: 'api-{{ env.base_domain }}'
                path: /
                servicePort: 9000
        dependsOn:
            - api-image
    -
        kind: Database
        name: db
        dockerCompose:
            command: '--default-authentication-plugin=mysql_native_password'
            environment:
                MYSQL_DATABASE: bunny_books
                MYSQL_PASSWORD: need-to-replace
                MYSQL_ROOT_PASSWORD: need-to-replace
                MYSQL_USER: books
            image: 'mysql:8.0.32'
            ports:
                - '3306:3306'
        volumes:
            -
                name: db-data
                mount: /var/lib/mysql
                subPath: ''
    -
        kind: Application
        name: frontend
        gitRepo: 'https://github.com/bunnyshell/templates.git'
        gitBranch: angular-books-app/v0.3.0
        gitApplicationPath: components/angular-books-app
        dockerCompose:
            build:
                context: ./components/angular-books-app
                dockerfile: .docker/Dockerfile
                target: dev
            deploy:
                resources:
                    limits:
                        memory: 1G
                    reservations:
                        memory: 1G
            environment:
                API_URL: 'https://{{ components.api.ingress.hosts[0].hostname }}'
            labels:
                kompose.service.healthcheck.readiness.test: 'CMD sh -c "wget --no-verbose --tries=1 --spider http://127.0.0.1:8080 || exit 1"'
                kompose.service.healthcheck.readiness.interval: 15s
                kompose.service.healthcheck.readiness.timeout: 10s
                kompose.service.healthcheck.readiness.retries: 10
                kompose.service.healthcheck.readiness.start_period: 120s
            ports:
                - '8080:8080'
        hosts:
            -
                hostname: 'app-{{ env.base_domain }}'
                path: /
                servicePort: 8080
volumes:
    -
        name: db-data
        size: 1Gi
        type: disk
dev:
    api:
        -
            containers:
                api:
                    remoteDevProfile: api
    frontend:
        -
            containers:
                frontend:
                    remoteDevProfile: frontend